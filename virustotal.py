#      –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö –ú–û–î–£–õ–Ø t.me/squeeare
# tg: @squeeare,dc: roze_tka, github: hate11f3

import requests
from .. import loader, utils
import hashlib
import os

@loader.tds
class VirusTotalScan(loader.Module):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ —Å—Å—ã–ª–æ–∫ —á–µ—Ä–µ–∑ VirusTotal"""
    strings = {"name": "VirusTotal"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue("vt_api", None, lambda: "üîê API –∫–ª—é—á VirusTotal")
        )

    @loader.command(help="–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ VirusTotal")
    async def check(self, m):
        api_key = self.config["vt_api"]
        if not api_key:
            return await utils.answer(m, "<b>‚ùå –£–∫–∞–∂–∏ API –∫–ª—é—á —á–µ—Ä–µ–∑ .cfg vt_api</b>")

        reply = await m.get_reply_message()
        if not reply or not (reply.file or reply.text):
            return await utils.answer(m, "<b>‚ùå –ò —á—Ç–æ –∂–µ —Ç—ã —Å–æ–±—Ä–∞–ª—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å? </b>")

        await utils.answer(m, "<b>–ü—Ä–æ–≤–µ—Ä–∫–∞. –ñ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Çü§ó</b>")

        if reply.file:
            path = await reply.download_media()
            with open(path, "rb") as f:
                file_hash = hashlib.sha256(f.read()).hexdigest()
            os.remove(path)
            url = f"https://www.virustotal.com/api/v3/files/{file_hash}"
        else:
            url_text = reply.raw_text.strip()
            url_id = hashlib.sha256(url_text.encode()).hexdigest()
            url = f"https://www.virustotal.com/api/v3/urls/{url_id}"

        headers = {
            "x-apikey": api_key
        }

        r = requests.get(url, headers=headers)
        if r.status_code == 404:
            return await utils.answer(m, "<b>‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤? –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. </b>")
        elif r.status_code != 200:
            return await utils.answer(m, f"<b>–û—à–∏–±–∫–∞: {r.status_code}</b>")

        data = r.json()
        stats = data["data"]["attributes"]["last_analysis_stats"]
        results = data["data"]["attributes"]["last_analysis_results"]

        text = f"<b>üß™ –ò—Ç–æ–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏:</b>\n"
        text += f"‚úÖ –ß–∏—Å—Ç–æ: <code>{stats.get('harmless', 0)}</code>\n"
        text += f"‚ùó –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ: <code>{stats.get('suspicious', 0)}</code>\n"
        text += f"‚ò£Ô∏è –û–ø–∞—Å–Ω–æ: <code>{stats.get('malicious', 0)}</code>\n"
        text += f"üí§ –ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: <code>{stats.get('undetected', 0)}</code>\n\n"

        for engine, result in results.items():
            if result["category"] != "undetected":
                text += f"{engine}: {result['result']}\n"

        if len(text) > 500:
            filename = "vt_result.txt"
            with open(filename, "w", encoding="utf-8") as f:
                f.write(text.replace("<b>", "").replace("</b>", "").replace("<code>", "").replace("</code>", ""))
            await m.client.send_file(m.chat_id, filename, caption="üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç")
            os.remove(filename)
        else:
            await utils.answer(m, text)